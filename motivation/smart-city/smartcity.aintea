package sample.smartcity

import aintea.lang.*

class City {
	string name;
	District[] districts;
	
	PoissonBinomial<int> nbTrafficJams() {
		District district = districts[0];
		PoissonBinomial<int> res = district.nbTrafficJams();
		
		for (int i=1; i<districts.length; i = i + 1) {
			district = districts[i];
			res = res + district.nbTrafficJams();
		}
		
		return res;
	}
	
	Gaussian<double> avgCO2() {
		District d = districts[0];
		Gaussian<double> sum = d.avgCO2();
		for (int i=1; i<districts.length; i = i + 1) {
			d = districts[i];
			sum = sum + d.avgCO2();
		}
		return sum / districts.length;
	}
	
	Gaussian<double> avgTemperature() {
		District district = districts[0];
		Gaussian<double> sum = district.avgTemperature();
		for (int i=1; i<districts.length; i = i + 1) {
			district = districts[i];
			sum = sum + district.avgTemperature();
		}
		return sum / districts.length;
	}
}

class District {
	string name;
	
	TemperatureSensor[] tempSensors;
	CO2Sensor[] co2Sensors;
	TrafficJamDetector[] trafficJamDetectors;
	
	Gaussian<double> avgCO2() {
		CO2Sensor sensor = co2Sensors[0];
		Gaussian<double> sum = sensor.CO2;
		for(int i=1;i<co2Sensors.length; i = i + 1) {
			sensor = co2Sensors[i];
			sum = sum + sensor.CO2;
		}
		return sum / co2Sensors.length;
	}
	
	Gaussian<double> avgTemperature() {
		TemperatureSensor s = tempSensors[0];
		Gaussian<double> sum = s.temperature;
		for(int i=1;i<tempSensors.length; i = i + 1) {
			s = tempSensors[i];
			sum = sum + s.temperature;
		}
		return sum / tempSensors.length;
	}
	
	PoissonBinomial<int> nbTrafficJams() {
		Bernoulli<bool>[] situation = new Bernoulli<bool>[trafficJamDetectors.length];
		for(int i=0; i < situation.length; i = i + 1) {
			TrafficJamDetector dtc = trafficJamDetectors[i];
			situation[i] = dtc.isTrafficJam;
		}
		return computeNbTrue(situation);
	}
}

class Sensor {
	Position position;
}

class Position {
	double latitude;
	double longitude;
}

class TemperatureSensor extends Sensor {
	Gaussian<double> temperature;
}

class CO2Sensor extends Sensor {
	Gaussian<double> CO2;
}

class TrafficJamDetector extends Sensor {
	Bernoulli<bool> isTrafficJam;
}